version: '3.8'

services:
  sql-analyzer:
    build: .
    container_name: sql-analyzer-enterprise
    ports:
      - "5000:5000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
      - ./exports:/app/exports
      - ./cache:/app/cache
    environment:
      - FLASK_ENV=production
      - SECRET_KEY=${SECRET_KEY:-your-secret-key-here}
      - MAX_CONTENT_LENGTH=104857600
      - UPLOAD_FOLDER=uploads
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - sql-analyzer-network

  redis:
    image: redis:7-alpine
    container_name: sql-analyzer-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - sql-analyzer-network

  nginx:
    image: nginx:alpine
    container_name: sql-analyzer-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - sql-analyzer
    restart: unless-stopped
    networks:
      - sql-analyzer-network

volumes:
  redis_data:

networks:
  sql-analyzer-network:
    driver: bridge
