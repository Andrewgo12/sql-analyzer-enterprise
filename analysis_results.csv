Category,Item,Value,Details
sql_analysis,status,success,
sql_analysis,processing_time,0.516,
sql_analysis,engine,mysql,
sql_analysis,statistics,"{'total_statements': 18, 'total_lines': 18, 'statement_types': {'SELECT': 9, 'CREATE': 1, 'DROP': 1, 'OTHER': 5, 'UPDATE': 2}, 'total_tables': 0, 'total_columns': 0, 'complexity_distribution': {}}",
sql_analysis,syntax_errors,"[{'line': 1, 'column': 32, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 2, 'column': 123, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 2, 'column': 9, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'NAME'"", 'severity': 'medium', 'suggestion': ""Did you mean 'CASE'?""}, {'line': 2, 'column': 26, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'TITLE'"", 'severity': 'medium', 'suggestion': ""Did you mean 'TABLE'?""}, {'line': 3, 'column': 118, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 3, 'column': 14, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'USER'"", 'severity': 'medium', 'suggestion': ""Did you mean 'SET'?""}, {'line': 4, 'column': 49, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 5, 'column': 105, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 5, 'column': 78, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'NAME'"", 'severity': 'medium', 'suggestion': ""Did you mean 'CASE'?""}, {'line': 6, 'column': 277, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 6, 'column': 15, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'NAME'"", 'severity': 'medium', 'suggestion': ""Did you mean 'CASE'?""}, {'line': 6, 'column': 133, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'ORDERS'"", 'severity': 'medium', 'suggestion': ""Did you mean 'ORDER'?""}, {'line': 6, 'column': 15, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'NAME'"", 'severity': 'medium', 'suggestion': ""Did you mean 'CASE'?""}, {'line': 7, 'column': 260, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 7, 'column': 27, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'INT'"", 'severity': 'medium', 'suggestion': ""Did you mean 'INTO'?""}, {'line': 7, 'column': 59, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'NAME'"", 'severity': 'medium', 'suggestion': ""Did you mean 'CASE'?""}, {'line': 7, 'column': 27, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'INT'"", 'severity': 'medium', 'suggestion': ""Did you mean 'INTO'?""}, {'line': 8, 'column': 30, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 9, 'column': 176, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 9, 'column': 86, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'INT'"", 'severity': 'medium', 'suggestion': ""Did you mean 'INTO'?""}, {'line': 10, 'column': 16, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 11, 'column': 5, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 12, 'column': 56, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 13, 'column': 56, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 14, 'column': 6, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 15, 'column': 128, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 15, 'column': 7, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'NAME'"", 'severity': 'medium', 'suggestion': ""Did you mean 'CASE'?""}, {'line': 15, 'column': 46, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'OVER'"", 'severity': 'medium', 'suggestion': ""Did you mean 'ORDER'?""}, {'line': 16, 'column': 347, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 16, 'column': 107, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'ORDERS'"", 'severity': 'medium', 'suggestion': ""Did you mean 'ORDER'?""}, {'line': 16, 'column': 187, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'LAG'"", 'severity': 'medium', 'suggestion': ""Did you mean 'AS'?""}, {'line': 16, 'column': 206, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'OVER'"", 'severity': 'medium', 'suggestion': ""Did you mean 'ORDER'?""}, {'line': 16, 'column': 187, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'LAG'"", 'severity': 'medium', 'suggestion': ""Did you mean 'AS'?""}, {'line': 16, 'column': 206, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'OVER'"", 'severity': 'medium', 'suggestion': ""Did you mean 'ORDER'?""}, {'line': 17, 'column': 0, 'type': 'SYNTAX_ERROR', 'message': 'Unmatched parentheses', 'severity': 'high', 'suggestion': 'Check parentheses balance in the statement'}, {'line': 17, 'column': 40, 'type': 'SYNTAX_ERROR', 'message': 'Missing semicolon', 'severity': 'medium', 'suggestion': 'Add semicolon at the end of the statement'}, {'line': 17, 'column': 7, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'NAME'"", 'severity': 'medium', 'suggestion': ""Did you mean 'CASE'?""}, {'line': 18, 'column': 65, 'type': 'SYNTAX_ERROR', 'message': ""Unknown keyword 'NAME'"", 'severity': 'medium', 'suggestion': ""Did you mean 'CASE'?""}]",
sql_analysis,semantic_errors,[],
sql_analysis,optimizations,"[{'line': 1, 'type': 'PERFORMANCE', 'current': 'SELECT * FROM users WHERE id = 1...', 'suggested': 'Add LIMIT clause', 'impact': 'HIGH', 'explanation': 'Large result sets can impact performance. Consider adding LIMIT.'}, {'line': 1, 'type': 'INDEX', 'current': 'WHERE clause detected', 'suggested': 'Ensure indexed columns in WHERE', 'impact': 'MEDIUM', 'explanation': 'WHERE clauses perform better with proper indexing.'}, {'line': 1, 'type': 'PERFORMANCE', 'current': 'SELECT *', 'suggested': 'SELECT specific columns', 'impact': 'MEDIUM', 'explanation': 'Selecting specific columns reduces data transfer and improves performance.'}, {'line': 2, 'type': 'PERFORMANCE', 'current': 'SELECT u.name, u.email, p.title FROM users u JOIN ...', 'suggested': 'Add LIMIT clause', 'impact': 'HIGH', 'explanation': 'Large result sets can impact performance. Consider adding LIMIT.'}, {'line': 2, 'type': 'INDEX', 'current': 'WHERE clause detected', 'suggested': 'Ensure indexed columns in WHERE', 'impact': 'MEDIUM', 'explanation': 'WHERE clauses perform better with proper indexing.'}, {'line': 3, 'type': 'PERFORMANCE', 'current': ""SELECT * FROM users WHERE username = 'admin' OR '1..."", 'suggested': 'Add LIMIT clause', 'impact': 'HIGH', 'explanation': 'Large result sets can impact performance. Consider adding LIMIT.'}, {'line': 3, 'type': 'INDEX', 'current': 'WHERE clause detected', 'suggested': 'Ensure indexed columns in WHERE', 'impact': 'MEDIUM', 'explanation': 'WHERE clauses perform better with proper indexing.'}, {'line': 3, 'type': 'PERFORMANCE', 'current': 'SELECT *', 'suggested': 'SELECT specific columns', 'impact': 'MEDIUM', 'explanation': 'Selecting specific columns reduces data transfer and improves performance.'}, {'line': 4, 'type': 'PERFORMANCE', 'current': ""SELECT * FROM large_table WHERE status = 'active'..."", 'suggested': 'Add LIMIT clause', 'impact': 'HIGH', 'explanation': 'Large result sets can impact performance. Consider adding LIMIT.'}, {'line': 4, 'type': 'INDEX', 'current': 'WHERE clause detected', 'suggested': 'Ensure indexed columns in WHERE', 'impact': 'MEDIUM', 'explanation': 'WHERE clauses perform better with proper indexing.'}, {'line': 4, 'type': 'PERFORMANCE', 'current': 'SELECT *', 'suggested': 'SELECT specific columns', 'impact': 'MEDIUM', 'explanation': 'Selecting specific columns reduces data transfer and improves performance.'}, {'line': 5, 'type': 'PERFORMANCE', 'current': 'SELECT * FROM products WHERE category_id IN ( SELE...', 'suggested': 'Add LIMIT clause', 'impact': 'HIGH', 'explanation': 'Large result sets can impact performance. Consider adding LIMIT.'}, {'line': 5, 'type': 'INDEX', 'current': 'WHERE clause detected', 'suggested': 'Ensure indexed columns in WHERE', 'impact': 'MEDIUM', 'explanation': 'WHERE clauses perform better with proper indexing.'}, {'line': 5, 'type': 'PERFORMANCE', 'current': 'SELECT *', 'suggested': 'SELECT specific columns', 'impact': 'MEDIUM', 'explanation': 'Selecting specific columns reduces data transfer and improves performance.'}, {'line': 6, 'type': 'INDEX', 'current': 'WHERE clause detected', 'suggested': 'Ensure indexed columns in WHERE', 'impact': 'MEDIUM', 'explanation': 'WHERE clauses perform better with proper indexing.'}, {'line': 12, 'type': 'INDEX', 'current': 'WHERE clause detected', 'suggested': 'Ensure indexed columns in WHERE', 'impact': 'MEDIUM', 'explanation': 'WHERE clauses perform better with proper indexing.'}, {'line': 13, 'type': 'INDEX', 'current': 'WHERE clause detected', 'suggested': 'Ensure indexed columns in WHERE', 'impact': 'MEDIUM', 'explanation': 'WHERE clauses perform better with proper indexing.'}, {'line': 15, 'type': 'PERFORMANCE', 'current': 'SELECT name, salary, department, ROW_NUMBER() OVER...', 'suggested': 'Add LIMIT clause', 'impact': 'HIGH', 'explanation': 'Large result sets can impact performance. Consider adding LIMIT.'}, {'line': 16, 'type': 'PERFORMANCE', 'current': 'WITH monthly_sales AS ( SELECT DATE_FORMAT(order_d...', 'suggested': 'Add LIMIT clause', 'impact': 'HIGH', 'explanation': 'Large result sets can impact performance. Consider adding LIMIT.'}, {'line': 17, 'type': 'PERFORMANCE', 'current': 'SELECT name FROM users WHERE (active = 1...', 'suggested': 'Add LIMIT clause', 'impact': 'HIGH', 'explanation': 'Large result sets can impact performance. Consider adding LIMIT.'}, {'line': 17, 'type': 'INDEX', 'current': 'WHERE clause detected', 'suggested': 'Ensure indexed columns in WHERE', 'impact': 'MEDIUM', 'explanation': 'WHERE clauses perform better with proper indexing.'}, {'line': 18, 'type': 'PERFORMANCE', 'current': 'SELECT * FROM products WHERE price > 100 SELECT IN...', 'suggested': 'Add LIMIT clause', 'impact': 'HIGH', 'explanation': 'Large result sets can impact performance. Consider adding LIMIT.'}, {'line': 18, 'type': 'INDEX', 'current': 'WHERE clause detected', 'suggested': 'Ensure indexed columns in WHERE', 'impact': 'MEDIUM', 'explanation': 'WHERE clauses perform better with proper indexing.'}, {'line': 18, 'type': 'PERFORMANCE', 'current': 'SELECT *', 'suggested': 'SELECT specific columns', 'impact': 'MEDIUM', 'explanation': 'Selecting specific columns reduces data transfer and improves performance.'}]",
sql_analysis,complexity_score,100,
sql_analysis,quality_score,0,
sql_analysis,recommendations,"['Fix 38 syntax error(s) for proper execution', 'Consider 24 optimization(s) for better performance']",
sql_analysis,file_hash,2f51509003abb73f60c24d9412528310,
security_analysis,status,success,
security_analysis,processing_time,0.007,
security_analysis,security_score,15,
security_analysis,risk_level,CRITICAL,
security_analysis,vulnerabilities,"[{'line': 15, 'column': 43, 'type': 'sql_injection', 'risk_level': 'critical', 'title': 'SQL Injection Vulnerability', 'description': 'Classic SQL injection pattern with OR condition', 'evidence': ""' OR '1'='"", 'recommendation': 'Use parameterized queries and input validation', 'cwe_id': 'CWE-89', 'owasp_category': 'A03:2021 – Injection'}, {'line': 1, 'column': 41, 'type': 'privilege_escalation', 'risk_level': 'high', 'title': 'Privilege Escalation Risk', 'description': 'Potentially dangerous privilege operation: FILE', 'evidence': 'FILE', 'recommendation': 'Review privilege assignments and apply principle of least privilege', 'cwe_id': 'CWE-269', 'owasp_category': 'A01:2021 – Broken Access Control'}, {'line': 2, 'column': 8, 'type': 'privilege_escalation', 'risk_level': 'high', 'title': 'Privilege Escalation Risk', 'description': 'Potentially dangerous privilege operation: FILE', 'evidence': 'FILE', 'recommendation': 'Review privilege assignments and apply principle of least privilege', 'cwe_id': 'CWE-269', 'owasp_category': 'A01:2021 – Broken Access Control'}, {'line': 109, 'column': 21, 'type': 'privilege_escalation', 'risk_level': 'high', 'title': 'Privilege Escalation Risk', 'description': 'Potentially dangerous privilege operation: FILE', 'evidence': 'FILE', 'recommendation': 'Review privilege assignments and apply principle of least privilege', 'cwe_id': 'CWE-269', 'owasp_category': 'A01:2021 – Broken Access Control'}, {'line': 18, 'column': 35, 'type': 'weak_authentication', 'risk_level': 'high', 'title': 'Hardcoded Password', 'description': 'Password appears to be hardcoded in SQL', 'evidence': ""IDENTIFIED BY 'PASSW..."", 'recommendation': 'Use environment variables or secure credential storage', 'cwe_id': 'CWE-798', 'owasp_category': 'A07:2021 – Identification and Authentication Failures'}]",
security_analysis,vulnerability_summary,"{'critical': 1, 'high': 4, 'medium': 0, 'low': 0, 'total': 5}",
security_analysis,risk_assessment,"{'overall_risk': 'CRITICAL', 'critical_issues': 1, 'injection_risks': 1, 'privilege_risks': 3, 'data_exposure_risks': 0, 'remediation_priority': ['IMMEDIATE: Fix critical vulnerabilities', 'HIGH: Implement parameterized queries', 'HIGH: Review privilege assignments']}",
security_analysis,recommendations,"['Keep database software updated', 'Apply principle of least privilege', 'Use environment variables or secure credential storage', 'Regular security audits and penetration testing', 'Review privilege assignments and apply principle of least privilege', 'Implement input validation and sanitization', 'Use parameterized queries and input validation', 'Use parameterized queries for all database operations']",
security_analysis,compliance_status,"{'owasp_top_10_issues': 5, 'cwe_issues': 5, 'compliance_score': 50, 'requires_immediate_attention': True}",
performance_analysis,status,success,
performance_analysis,processing_time,0.006,
performance_analysis,database_engine,mysql,
performance_analysis,performance_score,0,
performance_analysis,overall_complexity,35.28,
performance_analysis,performance_issues,"[{'line': 1, 'type': 'query_rewrite', 'severity': 'medium', 'title': 'SELECT * Usage', 'description': 'Using SELECT * retrieves all columns, which can be inefficient', 'current_code': 'SELECT *', 'optimized_code': 'SELECT column1, column2, ...', 'estimated_improvement': '20-50% faster', 'explanation': 'Selecting only needed columns reduces data transfer and memory usage'}, {'line': 1, 'type': 'limit_optimization', 'severity': 'high', 'title': 'Missing LIMIT Clause', 'description': 'Large result sets without LIMIT can cause performance issues', 'current_code': 'SELECT * FROM users WHERE id = 1...', 'optimized_code': 'SELECT * FROM users WHERE id = 1... LIMIT 1000', 'estimated_improvement': '50-90% faster for large tables', 'explanation': 'LIMIT prevents accidentally retrieving millions of rows'}, {'line': 2, 'type': 'limit_optimization', 'severity': 'high', 'title': 'Missing LIMIT Clause', 'description': 'Large result sets without LIMIT can cause performance issues', 'current_code': 'SELECT u.name, u.email, p.title \nFROM users u \nJOI...', 'optimized_code': 'SELECT u.name, u.email, p.title \nFROM users u \nJOI... LIMIT 1000', 'estimated_improvement': '50-90% faster for large tables', 'explanation': 'LIMIT prevents accidentally retrieving millions of rows'}, {'line': 2, 'type': 'query_rewrite', 'severity': 'medium', 'title': 'ORDER BY without LIMIT', 'description': 'Sorting large result sets without LIMIT is expensive', 'current_code': 'ORDER BY column', 'optimized_code': 'ORDER BY column LIMIT n', 'estimated_improvement': '40-80% faster', 'explanation': 'Sorting is expensive; LIMIT reduces the sorting overhead'}, {'line': 3, 'type': 'query_rewrite', 'severity': 'medium', 'title': 'SELECT * Usage', 'description': 'Using SELECT * retrieves all columns, which can be inefficient', 'current_code': 'SELECT *', 'optimized_code': 'SELECT column1, column2, ...', 'estimated_improvement': '20-50% faster', 'explanation': 'Selecting only needed columns reduces data transfer and memory usage'}, {'line': 3, 'type': 'limit_optimization', 'severity': 'high', 'title': 'Missing LIMIT Clause', 'description': 'Large result sets without LIMIT can cause performance issues', 'current_code': ""SELECT * FROM users WHERE username = 'admin' OR '1..."", 'optimized_code': ""SELECT * FROM users WHERE username = 'admin' OR '1... LIMIT 1000"", 'estimated_improvement': '50-90% faster for large tables', 'explanation': 'LIMIT prevents accidentally retrieving millions of rows'}, {'line': 4, 'type': 'query_rewrite', 'severity': 'medium', 'title': 'SELECT * Usage', 'description': 'Using SELECT * retrieves all columns, which can be inefficient', 'current_code': 'SELECT *', 'optimized_code': 'SELECT column1, column2, ...', 'estimated_improvement': '20-50% faster', 'explanation': 'Selecting only needed columns reduces data transfer and memory usage'}, {'line': 4, 'type': 'limit_optimization', 'severity': 'high', 'title': 'Missing LIMIT Clause', 'description': 'Large result sets without LIMIT can cause performance issues', 'current_code': ""SELECT * FROM large_table WHERE status = 'active'..."", 'optimized_code': ""SELECT * FROM large_table WHERE status = 'active'... LIMIT 1000"", 'estimated_improvement': '50-90% faster for large tables', 'explanation': 'LIMIT prevents accidentally retrieving millions of rows'}, {'line': 5, 'type': 'query_rewrite', 'severity': 'medium', 'title': 'SELECT * Usage', 'description': 'Using SELECT * retrieves all columns, which can be inefficient', 'current_code': 'SELECT *', 'optimized_code': 'SELECT column1, column2, ...', 'estimated_improvement': '20-50% faster', 'explanation': 'Selecting only needed columns reduces data transfer and memory usage'}, {'line': 5, 'type': 'limit_optimization', 'severity': 'high', 'title': 'Missing LIMIT Clause', 'description': 'Large result sets without LIMIT can cause performance issues', 'current_code': 'SELECT * FROM products WHERE category_id IN (\n    ...', 'optimized_code': 'SELECT * FROM products WHERE category_id IN (\n    ... LIMIT 1000', 'estimated_improvement': '50-90% faster for large tables', 'explanation': 'LIMIT prevents accidentally retrieving millions of rows'}, {'line': 5, 'type': 'function_optimization', 'severity': 'high', 'title': 'Expensive Function: LIKE', 'description': 'Function LIKE can be expensive in WHERE clauses', 'current_code': 'LIKE', 'optimized_code': 'Use full-text search or optimize with proper indexing', 'estimated_improvement': '10-80% faster', 'explanation': 'Function LIKE prevents index usage and requires full table scan'}, {'line': 5, 'type': 'subquery_optimization', 'severity': 'medium', 'title': 'Subquery in IN Clause', 'description': 'IN subqueries can often be optimized with JOINs', 'current_code': 'WHERE column IN (SELECT ...)', 'optimized_code': 'WHERE EXISTS (SELECT 1 FROM ...) or use JOIN', 'estimated_improvement': '20-60% faster', 'explanation': 'EXISTS or JOINs are often more efficient than IN subqueries'}, {'line': 15, 'type': 'limit_optimization', 'severity': 'high', 'title': 'Missing LIMIT Clause', 'description': 'Large result sets without LIMIT can cause performance issues', 'current_code': 'SELECT \n    name,\n    salary,\n    department,\n    ...', 'optimized_code': 'SELECT \n    name,\n    salary,\n    department,\n    ... LIMIT 1000', 'estimated_improvement': '50-90% faster for large tables', 'explanation': 'LIMIT prevents accidentally retrieving millions of rows'}, {'line': 15, 'type': 'query_rewrite', 'severity': 'medium', 'title': 'ORDER BY without LIMIT', 'description': 'Sorting large result sets without LIMIT is expensive', 'current_code': 'ORDER BY column', 'optimized_code': 'ORDER BY column LIMIT n', 'estimated_improvement': '40-80% faster', 'explanation': 'Sorting is expensive; LIMIT reduces the sorting overhead'}, {'line': 16, 'type': 'limit_optimization', 'severity': 'high', 'title': 'Missing LIMIT Clause', 'description': 'Large result sets without LIMIT can cause performance issues', 'current_code': 'WITH monthly_sales AS (\n    SELECT \n        DATE_F...', 'optimized_code': 'WITH monthly_sales AS (\n    SELECT \n        DATE_F... LIMIT 1000', 'estimated_improvement': '50-90% faster for large tables', 'explanation': 'LIMIT prevents accidentally retrieving millions of rows'}, {'line': 16, 'type': 'query_rewrite', 'severity': 'medium', 'title': 'ORDER BY without LIMIT', 'description': 'Sorting large result sets without LIMIT is expensive', 'current_code': 'ORDER BY column', 'optimized_code': 'ORDER BY column LIMIT n', 'estimated_improvement': '40-80% faster', 'explanation': 'Sorting is expensive; LIMIT reduces the sorting overhead'}, {'line': 17, 'type': 'limit_optimization', 'severity': 'high', 'title': 'Missing LIMIT Clause', 'description': 'Large result sets without LIMIT can cause performance issues', 'current_code': 'SELECT name FROM users WHERE (active = 1...', 'optimized_code': 'SELECT name FROM users WHERE (active = 1... LIMIT 1000', 'estimated_improvement': '50-90% faster for large tables', 'explanation': 'LIMIT prevents accidentally retrieving millions of rows'}, {'line': 18, 'type': 'query_rewrite', 'severity': 'medium', 'title': 'SELECT * Usage', 'description': 'Using SELECT * retrieves all columns, which can be inefficient', 'current_code': 'SELECT *', 'optimized_code': 'SELECT column1, column2, ...', 'estimated_improvement': '20-50% faster', 'explanation': 'Selecting only needed columns reduces data transfer and memory usage'}, {'line': 18, 'type': 'limit_optimization', 'severity': 'high', 'title': 'Missing LIMIT Clause', 'description': 'Large result sets without LIMIT can cause performance issues', 'current_code': 'SELECT * FROM products WHERE price > 100\n\n\nSELECT ...', 'optimized_code': 'SELECT * FROM products WHERE price > 100\n\n\nSELECT ... LIMIT 1000', 'estimated_improvement': '50-90% faster for large tables', 'explanation': 'LIMIT prevents accidentally retrieving millions of rows'}]",
performance_analysis,index_suggestions,"[{'table': 'i', 'columns': ['d'], 'index_type': 'BTREE', 'reason': 'WHERE clause filtering', 'estimated_benefit': '50-90% query speedup', 'sql_command': 'CREATE INDEX idx_i_d ON i (d)'}, {'table': 'u', 'columns': ['active'], 'index_type': 'BTREE', 'reason': 'WHERE clause filtering', 'estimated_benefit': '50-90% query speedup', 'sql_command': 'CREATE INDEX idx_u_active ON u (active)'}, {'table': 'posts', 'columns': ['id'], 'index_type': 'BTREE', 'reason': 'JOIN condition optimization', 'estimated_benefit': '30-70% join speedup', 'sql_command': 'CREATE INDEX idx_posts_id ON posts (id)'}, {'table': 'p', 'columns': ['created_at'], 'index_type': 'BTREE', 'reason': 'ORDER BY optimization', 'estimated_benefit': '40-80% sorting speedup', 'sql_command': 'CREATE INDEX idx_p_created_at ON p (created_at)'}, {'table': 'usernam', 'columns': ['e'], 'index_type': 'BTREE', 'reason': 'WHERE clause filtering', 'estimated_benefit': '50-90% query speedup', 'sql_command': 'CREATE INDEX idx_usernam_e ON usernam (e)'}, {'table': 'statu', 'columns': ['s'], 'index_type': 'BTREE', 'reason': 'WHERE clause filtering', 'estimated_benefit': '50-90% query speedup', 'sql_command': 'CREATE INDEX idx_statu_s ON statu (s)'}, {'table': 'category_i', 'columns': ['d'], 'index_type': 'BTREE', 'reason': 'WHERE clause filtering', 'estimated_benefit': '50-90% query speedup', 'sql_command': 'CREATE INDEX idx_category_i_d ON category_i (d)'}, {'table': 'nam', 'columns': ['e'], 'index_type': 'BTREE', 'reason': 'WHERE clause filtering', 'estimated_benefit': '50-90% query speedup', 'sql_command': 'CREATE INDEX idx_nam_e ON nam (e)'}, {'table': 'u', 'columns': ['created_at'], 'index_type': 'BTREE', 'reason': 'WHERE clause filtering', 'estimated_benefit': '50-90% query speedup', 'sql_command': 'CREATE INDEX idx_u_created_at ON u (created_at)'}, {'table': 'orders', 'columns': ['id'], 'index_type': 'BTREE', 'reason': 'JOIN condition optimization', 'estimated_benefit': '30-70% join speedup', 'sql_command': 'CREATE INDEX idx_orders_id ON orders (id)'}, {'table': 'unknown', 'columns': ['total_spent'], 'index_type': 'BTREE', 'reason': 'ORDER BY optimization', 'estimated_benefit': '40-80% sorting speedup', 'sql_command': 'CREATE INDEX idx_unknown_total_spent ON unknown (total_spent)'}, {'table': 'i', 'columns': ['d'], 'index_type': 'BTREE', 'reason': 'WHERE clause filtering', 'estimated_benefit': '50-90% query speedup', 'sql_command': 'CREATE INDEX idx_i_d ON i (d)'}, {'table': 'i', 'columns': ['d'], 'index_type': 'BTREE', 'reason': 'WHERE clause filtering', 'estimated_benefit': '50-90% query speedup', 'sql_command': 'CREATE INDEX idx_i_d ON i (d)'}, {'table': 'unknown', 'columns': ['salary'], 'index_type': 'BTREE', 'reason': 'ORDER BY optimization', 'estimated_benefit': '40-80% sorting speedup', 'sql_command': 'CREATE INDEX idx_unknown_salary ON unknown (salary)'}, {'table': 'unknown', 'columns': ['month', 'month', 'month'], 'index_type': 'BTREE', 'reason': 'ORDER BY optimization', 'estimated_benefit': '40-80% sorting speedup', 'sql_command': 'CREATE INDEX idx_unknown_month_month_month ON unknown (month, month, month)'}, {'table': 'pric', 'columns': ['e'], 'index_type': 'BTREE', 'reason': 'WHERE clause filtering', 'estimated_benefit': '50-90% query speedup', 'sql_command': 'CREATE INDEX idx_pric_e ON pric (e)'}]",
performance_analysis,execution_estimates,"{'individual_estimates': [{'statement_number': 1, 'estimated_time': '100ms - 1s', 'category': 'moderate', 'complexity_score': 30}, {'statement_number': 2, 'estimated_time': '1s - 10s', 'category': 'slow', 'complexity_score': 55}, {'statement_number': 3, 'estimated_time': '100ms - 1s', 'category': 'moderate', 'complexity_score': 30}, {'statement_number': 4, 'estimated_time': '100ms - 1s', 'category': 'moderate', 'complexity_score': 30}, {'statement_number': 5, 'estimated_time': '100ms - 1s', 'category': 'moderate', 'complexity_score': 50}, {'statement_number': 6, 'estimated_time': '> 10s', 'category': 'very_slow', 'complexity_score': 100}, {'statement_number': 7, 'estimated_time': '< 100ms', 'category': 'fast', 'complexity_score': 25}, {'statement_number': 8, 'estimated_time': '< 100ms', 'category': 'fast', 'complexity_score': 10}, {'statement_number': 9, 'estimated_time': '< 100ms', 'category': 'fast', 'complexity_score': 25}, {'statement_number': 10, 'estimated_time': '< 100ms', 'category': 'fast', 'complexity_score': 10}, {'statement_number': 11, 'estimated_time': '< 100ms', 'category': 'fast', 'complexity_score': 10}, {'statement_number': 12, 'estimated_time': '< 100ms', 'category': 'fast', 'complexity_score': 20}, {'statement_number': 13, 'estimated_time': '< 100ms', 'category': 'fast', 'complexity_score': 20}, {'statement_number': 14, 'estimated_time': '< 100ms', 'category': 'fast', 'complexity_score': 10}, {'statement_number': 15, 'estimated_time': '100ms - 1s', 'category': 'moderate', 'complexity_score': 35}, {'statement_number': 16, 'estimated_time': '> 10s', 'category': 'very_slow', 'complexity_score': 100}, {'statement_number': 17, 'estimated_time': '100ms - 1s', 'category': 'moderate', 'complexity_score': 30}, {'statement_number': 18, 'estimated_time': '100ms - 1s', 'category': 'moderate', 'complexity_score': 45}], 'total_estimated_time': 'Several minutes (contains 3 slow queries)'}",
performance_analysis,complexity_analysis,"{'overall_complexity': 35.28, 'total_statements': 18, 'complexity_breakdown': {'simple': 8, 'moderate': 7, 'complex': 1, 'very_complex': 2}, 'complexity_level': 'Moderate'}",
performance_analysis,optimization_summary,"{'total_issues': 19, 'critical_issues': 0, 'high_impact_issues': 10, 'optimization_types': {'query_rewrite': 8, 'limit_optimization': 9, 'function_optimization': 1, 'subquery_optimization': 1}, 'potential_improvement': '30-70% improvement possible'}",
performance_analysis,recommendations,"['Address 19 performance issues identified', 'Consider adding 16 suggested indexes', 'Rewrite queries to select only needed columns']",
file_analysis,statement_counts,"{'SELECT': 14, 'INSERT': 0, 'UPDATE': 2, 'DELETE': 0, 'CREATE': 6, 'DROP': 1, 'ALTER': 0, 'GRANT': 0, 'REVOKE': 0}",
file_analysis,total_statements,23,
file_analysis,features,"{'has_joins': True, 'has_subqueries': True, 'has_functions': True, 'has_procedures': True, 'has_triggers': False, 'has_views': False, 'has_indexes': True, 'has_transactions': True, 'has_comments': True}",
file_analysis,engine_hints,['MySQL'],
file_analysis,complexity_score,100,
file_analysis,estimated_execution_complexity,Very Complex,
file_analysis,potential_issues,"['Contains SELECT * statements', 'High number of SELECT statements', 'Contains potentially destructive DROP statements']",
file_analysis,content_summary,"Primarily SELECT operations (14 statements); Features: joins, subqueries, functions",
processing_time,Value,0.017,
